using System;
using System.Collections.Generic;
using System.Drawing;
using System.Windows.Forms;
using System.IO;

namespace MiniMuitoPequenoBancodeDados
{
	public partial class MainForm : Form
	{
		public MainForm()
		{

			InitializeComponent();
			
//			richTextBox1.LoadFile("funcionarios.db", RichTextBoxStreamType.PlainText);
			
//			MessageBox.Show("Mudou");
			
			// os comando comentadado estao ai para me lembra
			

		}
		
		string[][] bufferdados = new string[128][];
		int o = 0;
		int q = 0;
		
		void Limpar() 
		{
			textBox1.Clear();
			textBox2.Clear();
			textBox3.Clear();
			textBox4.Clear();
			o = 0;
			label2.Text = richTextBox1.Lines.Length.ToString();
		}
		
		void NulllArray(Array[] arrayx)
		{
			for (int i = 0; i < arrayx.Length; i++) {
				if(arrayx[i] != null){
					arrayx[i] = null;
				} else {
					return;
				}
			}
		}
		
		void Button1Click(object sender, EventArgs e)
		{
			// Limpa os campos para uma nova entrada
			
			Limpar();
		}
		
		void Button2Click(object sender, EventArgs e)
		{
			// Salva para o 'banco de dado'
			// Caso ocorra uma pesquisa, mudara 
			
			// muda esse comentario
			
			if (textBox1.Text != "" && textBox2.Text != "" && textBox3.Text != "")
			{
				string linhaNova = textBox1.Text+"\t"+textBox2.Text+"\t"+textBox3.Text+"\t"+label2.Text;
				
				int numLinha = int.Parse(label2.Text);
				
				if (label2.Text == richTextBox1.Lines.Length.ToString())
				{
					richTextBox1.Text = richTextBox1.Text+'\n'+linhaNova;
					richTextBox1.SaveFile("funcionarios.txt", RichTextBoxStreamType.PlainText);
					MessageBox.Show("Salvou");
					Limpar();
				} else {
					string linhaVelha = richTextBox1.Lines[numLinha];
					richTextBox1.Text = richTextBox1.Text.Replace(linhaVelha, linhaNova);
					MessageBox.Show("Mudou");

				}

			}			
		}
		
		void Button3Click(object sender, EventArgs e)
		{
			// le o numero do textbox4
			// pesquisa com o numero do textbox4 a linha do banco de dado 
			// e coloca nos repequitivos campos
			
			int numLinha;
			
			if (!int.TryParse(textBox4.Text, out numLinha))
			{
				return;
			}
			if (numLinha >= richTextBox1.Lines.Length)
			{
				return;
			}
			
			label2.Text = numLinha.ToString();
			
			string[] dado = richTextBox1.Lines[numLinha].Split('\t');
			textBox1.Text = dado[0];
			textBox2.Text = dado[1];
			textBox3.Text = dado[2];
			
		}
		
		void Button4Click(object sender, EventArgs e)
		{
			// deleta a linha do banco de dados com o numero fornecido do textbox4
			
			int numLinha = int.Parse(textBox4.Text);
							
			int maxlinha = richTextBox1.Lines.Length-1;
			
			if (numLinha > maxlinha){
				return;
			}
			
			if (numLinha == maxlinha){
				string linhaVelha = richTextBox1.Lines[numLinha];
				richTextBox1.Text = richTextBox1.Text.Replace(linhaVelha, null);
				
				string linhaAnteriorOld = richTextBox1.Lines[numLinha-1];

				string linhaAnteriorNew = linhaAnteriorOld.Replace('\n', ' ');
				richTextBox1.Text = richTextBox1.Text.Replace(linhaAnteriorOld + '\n', linhaAnteriorNew);
				
			} else {
				string linhaVelha = richTextBox1.Lines[numLinha];
				richTextBox1.Text = richTextBox1.Text.Replace(linhaVelha + '\n', null);
			}		
		}
		
//		void Button5Click(object sender, EventArgs e)
//		{
			// ignorar, funçao de pesquisa, mas so retorna o primero resultado que encontrar
//			
//			int maxLinha = richTextBox1.Lines.Length;
//			
//			if (textBox1.Text == ""){
//				return;
//			}
//			
//			for (int i = 1; i < maxLinha; i++) {
//				string[] compare = richTextBox1.Lines[i].Split('\t');
//				
//				if (compare[0].ToLower() == textBox1.Text.ToLower()){
//					textBox2.Text = compare[1];
//					textBox3.Text = compare[2];
//					return;
//				}
//			}
//		}
		
		void Button7Click(object sender, EventArgs e)
		{
			// Pesquina por nomes com a string fornecida do textbox1
			// se tiver mais que um resultado, abilita os botoes 6 e 8
			
			o=0; q=0;
			button8.Visible = false;
			button6.Visible = false;
			
			NulllArray(bufferdados);
			
			int maxLinha = richTextBox1.Lines.Length;
			
			if (textBox1.Text == ""){
				return;
			}
			
			for (int i = 1; i < maxLinha; i++) {
				string[] compare = richTextBox1.Lines[i].Split('\t');
				
				if (compare[0].ToLower() == textBox1.Text.ToLower()){
					
					bufferdados[o] = compare;
//					MessageBox.Show(string.Concat(bufferdados[o]));
					o++;	
				}
			}
			
			if(bufferdados[0] == null){
				MessageBox.Show("nao encontrado");
				return;
			}
			
			MessageBox.Show(o.ToString());
			
			if(o > 1){
				button8.Visible = true;
			}
			
			textBox1.Text = bufferdados[0][0];
			textBox2.Text = bufferdados[0][1];
			textBox3.Text = bufferdados[0][2];
			
		}
		
		void Button6Click(object sender, EventArgs e)
		{
			// retrocece o index, mostrando o resultado anterior
			
			button8.Visible = true;
			
			q--;
//			MessageBox.Show(q.ToString()+" d");
			textBox1.Text = bufferdados[q][0];
			textBox2.Text = bufferdados[q][1];
			textBox3.Text = bufferdados[q][2];
			
			if (q == 0){
				button6.Visible = false;
				return;
			}
			
		}
		
		void Button8Click(object sender, EventArgs e)
		{
			// avança o index, mostrando o proximo resultado
			
			button6.Visible = true;
			
			q++;
//			MessageBox.Show(q.ToString()+" d");
			textBox1.Text = bufferdados[q][0];
			textBox2.Text = bufferdados[q][1];
			textBox3.Text = bufferdados[q][2];
			
			if (q == o-1){
				button8.Visible = false;
				return;
			}

		}
		
		void MainFormLoad(object sender, EventArgs e)
		{
			try {
				richTextBox1.LoadFile("funcionarios.txt", RichTextBoxStreamType.PlainText);
			} catch (IOException exc) {
				richTextBox1.SaveFile("funcionarios.txt", RichTextBoxStreamType.PlainText);
				MessageBox.Show("existe nao irmao, calma que eu crio");
			}
			
			int maxlinha = richTextBox1.Lines.Length;
			label2.Text = maxlinha.ToString();
		}
	}
}
